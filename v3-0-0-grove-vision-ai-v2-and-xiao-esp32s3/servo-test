/*
 * Connections XIAO-esp32s3 to Grove Vision AI V2 
 * GND to GND
 * 3V3 to 3V3
 * SDA (D4) to SDA grove
 * SCL (D5) to SCL Grove
 * 
 * 
 * Coonections XIAO-esp32S3 to Servo
 * D2 to Orange wire
 * 
 * Connections XIAO-esp32S3 to Big Motor Driver Pololu 1451 VNH5019
 * https://github.com/hpssjellis/maker100-eco/blob/main/media/b-b-g-big-dc-motor-driver.png
 * GND to top left 1   Digital turn
 * D0 to top left 3    PWM motor speed
 * 3V3 to top left 6   Digital turn
 * 3V3 to top left 7
 * GND to top left 8
 * 
 * 
 * Do not use D3 and D6 on XIAO as they are part of the Grove communication
 * 
 */


#include <Arduino.h>
#include <Seeed_Arduino_SSCMA.h>
#include <ESP32Servo.h>   // for XIAO-ESP32S3-Sense

TaskHandle_t myMotorTaskHandle = NULL;
TaskHandle_t myTurnTaskHandle  = NULL;
//int myPWMSpeed = 0; // Global variable to store PWM speed


// Global Variables
SSCMA AI;
Servo myServo_D2;
int myLowestSpeed = 53;          //  was 60;  37;   // slowest speed that the car moves on a charged battery. Typically between about 20 and 50 depending on your DC motor  (It will "hum" if not enough)
int myChosenSpeed = 0;           // speed the car should be going
int myOldChosenSpeed = 0;        // speed the car should be going

int myAngle = 0;
int myOldAngle = 0;

int myDrivePwmPin = D0;          // PWM pin for the big motor driver.
//int myMultipleObjects = 0;     // zero the object count
int myObjectMax = 5;             // maximum number of objects to increase speed
int mySpeedMultiplier =  3;      // object speed mulitplier
int myMotorDelay  =   300;        // was 200
int myTurnDelay  =   300;         // was 200



void setup(){
    Serial.begin(115200);
    pinMode(myDrivePwmPin, OUTPUT);   // PWM 0 to 255 
    myServo_D2.attach(D2); // D2 should do PWM on XIOA
    
    // note the two drive pins on the big motor driver are just connected to GND and 3V3 respectively.

   // test motor
    analogWrite(myDrivePwmPin, myLowestSpeed); // slowest speed motor test
    delay(500);                                // wait a bit
    analogWrite(myDrivePwmPin, 0);             // stop motor
}


void loop(){
     int myDelay = 200;
 
      myServo_D2.write(53); 
      delay(myDelay);
      myServo_D2.write(127); 
      delay(myDelay);      
      myServo_D2.write(90); 
      delay(myDelay);      
      myServo_D2.write(53); 
      delay(myDelay);
      myServo_D2.write(90); 
      delay(myDelay);      
      myServo_D2.write(127); 
      delay(myDelay);

       
}
